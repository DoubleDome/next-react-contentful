@mixin _button-size(
  $padding-vertical,
  $padding-horizontal,
  $font-size,
  $line-height,
  $border-radius
) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

@mixin reset-default-button-styles {
  background: none;
  border: none;
  display: inline-block;
  font: inherit;
  margin: 0;
  padding: 0;
  outline: none;
  outline-offset: 0;
  cursor: pointer;

  &::-moz-focus-inner {
    border: none;
    padding: 0;
  }
}

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  text-decoration: none;
  appearance: none;
  text-transform: uppercase;
  font-weight: 500;
  letter-spacing: 1px;
  border: 1px solid $border;
  text-align: center;

  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }
  &:active {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);

    &:hover,
    &:focus {
      color: $color;
      background-color: darken($background, 17%);
      border-color: darken($border, 25%);
    }
  }
  &:active {
    background-image: none;
  }

  &[disabled] {
    &:hover,
    &:focus,
    &.focus {
      background-color: $background;
      border-color: $border;
    }
  }
}

@mixin button-size($size: md, $display: inline-block) {
  @if ($size == sm) {
    @include _button-size(11px, 24px, 14px, 16px, 2px);
  } @else if($size == md) {
    @include _button-size(16px, 24px, 14px, 16px, 2px);
  } @else if ($size == lg) {
    @include _button-size(23px, 24px, 14px, 16px, 2px);
  } @else {
    @error "Unsupported button size";
  }

  @if ($display == block) {
    display: $display;
    width: 100%;
  } @else {
    display: $display;
  }
}

@mixin button-color-scheme($scheme) {
  @if ($scheme == 'primary') {
    @include button-variant(#fff, $brand-color-primary, $brand-color-primary);
  } @else if ($scheme == 'secondary') {
    @include button-variant(
      $brand-color-primary,
      transparent,
      $brand-color-primary
    );
  } @else if ($scheme == 'ghost') {
    @include button-variant(#fff, transparent, #fff);
  } @else {
    @error "Unsupported button color scheme";
  }
}

// move to a button component at some point,
@mixin button-primary() {
  @include reset-default-button-styles;
  @include button-size;
  @include button-color-scheme(primary);
}

@mixin button-secondary() {
  @include reset-default-button-styles;
  @include button-size;
  @include button-color-scheme(secondary);
}

@mixin button-tertiary() {
  @include reset-default-button-styles;
  color: $brand-color-primary;
  border-bottom: 1px solid $brand-color-border;
  font-size: 18px;

  &:hover {
    border-bottom-color: $brand-color-primary;
  }
}

@mixin button-micro() {
}

@mixin button-ghost() {
  @include reset-default-button-styles;
  @include button-size;
  @include button-color-scheme(ghost);
}
